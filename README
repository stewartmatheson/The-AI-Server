== Welcome to The AI Server 

The AI server is a research project that aims to test the feasibility of online machine learning across a distributed player network. More info to come...

== Installing the server

There are to parts to this project. The first is the server. I will detail this first. To run the server you will want to be running ruby 1.8.7. This is the only ruby version I can confirm this project to work on. Ruby can be installed in a number of different ways depeding on what platfrom your running. If you are running Windows then there is an installer that is downloadable. If your running linux then check your distros package management system. Apt for ubuntu has ruby 1.8.7 avaiable for install.

If your hardcore you can compile ruby from source. This is the way that I would recommend installing ruby. To do this first you will need to compile and install readline. Readline supports ruby's console.

    cd /usr/local/src
    curl -O ftp://ftp.gnu.org/gnu/readline/readline-5.2.tar.gz
    tar zxvf readline-5.2.tar.gz
    cd readline-5.2
    ./configure --prefix=/usr/local
    make
    sudo make install
    cd..

Next its ruby.

    cd /usr/local/src
    curl -O ftp://ftp.ruby-lang.org/pub/ruby/1.8/ruby-1.8.7-p72.tar.gz
    tar xzvf ruby-1.8.7-p72.tar.gz
    cd ruby-1.8.7-p72
    ./configure --enable-shared --enable-pthread --with-readline-dir=/usr/local --prefix=/usr/local
    make
    sudo make install
    cd ..

Once this is done make sure that ruby is in your path. If not it will not work. Next install ruby gems.

    cd /usr/local/src
    curl -O http://rubyforge.org/frs/download.php/45905/rubygems-1.3.1.tgz
    tar xzvf rubygems-1.3.1.tgz
    cd rubygems-1.3.1
    sudo /usr/local/bin/ruby setup.rb

Once ruby gems has been installed you can now install rails. Rails 3.rc1 was used to code this project however rails 3.0.0 should work fine. Make sure your NOT using rails 2 though as this will error.

    sudo gem install rails --verison=3.0.0

Also install bundler this will manage all the gems this project needs.

    sudo gem install bundler

After this copy the rails application to any folder that takes your fancy. Make sure your in this folder and run bundle install. This will search for all the needed gems for this project and install them. At this point you might want to consider what database your going to use as the application needs a database to run. If you have mysql already installed this is fine. However if you want to use sqlite then you will have to change the bundle file to install the sqlite gem as well as the database config file in the rails application to reflect this change. I have not testing this app with sqlite but I would not suspect there would be any problem in running it in place of mysql. Just dont run sqlite in production or you will get us all killed.

Once the bundle is up and running you need to create the database 

    rake db:create 

will do this for you. Next migrate the database.

    rake db:migrate

This will create all the tables in the database that are needed for the application. Now we are ready to start. Kick the application in the guts buy running rails server. The server should boot. Once it does point your browser to localhost:3000 and enjoy.


== Changing the client.

If you need to make chagnes to the client you will need to have adobe flash insatlled on your machine. If you dont you can still make chagnes to the source how ever you will not be able to compile them in to a new SWF file.  Also if your making chagnes to the client then you will want to be running a server in the background for testing. A mac is great for doing this as it runs both a NIX backend and flash at the sametime however you can still install rails on a windows box if thats what you have. Remember to place the updated SWF file in the iamges folder of the public folder within the rails application to update the client with the new SWF file.
